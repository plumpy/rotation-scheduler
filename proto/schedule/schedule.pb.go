// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schedule.proto

package schedule

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Shift struct {
	// Must be in the format "Mon 02 Jan 2006".
	StartDate string `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	User      string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// Used when someone needs to swap, but not to interrupt the regular rotation.
	UserOverride         string   `protobuf:"bytes,3,opt,name=user_override,json=userOverride,proto3" json:"user_override,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shift) Reset()         { *m = Shift{} }
func (m *Shift) String() string { return proto.CompactTextString(m) }
func (*Shift) ProtoMessage()    {}
func (*Shift) Descriptor() ([]byte, []int) {
	return fileDescriptor_d00842e68e05382a, []int{0}
}

func (m *Shift) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shift.Unmarshal(m, b)
}
func (m *Shift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shift.Marshal(b, m, deterministic)
}
func (m *Shift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shift.Merge(m, src)
}
func (m *Shift) XXX_Size() int {
	return xxx_messageInfo_Shift.Size(m)
}
func (m *Shift) XXX_DiscardUnknown() {
	xxx_messageInfo_Shift.DiscardUnknown(m)
}

var xxx_messageInfo_Shift proto.InternalMessageInfo

func (m *Shift) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Shift) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Shift) GetUserOverride() string {
	if m != nil {
		return m.UserOverride
	}
	return ""
}

type Schedule struct {
	Shifts               []*Shift `protobuf:"bytes,1,rep,name=shifts,proto3" json:"shifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_d00842e68e05382a, []int{1}
}

func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (m *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(m, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetShifts() []*Shift {
	if m != nil {
		return m.Shifts
	}
	return nil
}

func init() {
	proto.RegisterType((*Shift)(nil), "io.spinnaker.proto.schedule.Shift")
	proto.RegisterType((*Schedule)(nil), "io.spinnaker.proto.schedule.Schedule")
}

func init() {
	proto.RegisterFile("schedule.proto", fileDescriptor_d00842e68e05382a)
}

var fileDescriptor_d00842e68e05382a = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4e, 0xce, 0x48,
	0x4d, 0x29, 0xcd, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0xce, 0xcc, 0xd7, 0x2b,
	0x2e, 0xc8, 0xcc, 0xcb, 0x4b, 0xcc, 0x4e, 0x2d, 0x82, 0x88, 0xe9, 0xc1, 0x94, 0x28, 0xc5, 0x73,
	0xb1, 0x06, 0x67, 0x64, 0xa6, 0x95, 0x08, 0xc9, 0x72, 0x71, 0x15, 0x97, 0x24, 0x16, 0x95, 0xc4,
	0xa7, 0x24, 0x96, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0x82, 0x45, 0x5c, 0x12,
	0x4b, 0x52, 0x85, 0x84, 0xb8, 0x58, 0x4a, 0x8b, 0x53, 0x8b, 0x24, 0x98, 0xc0, 0x12, 0x60, 0xb6,
	0x90, 0x32, 0x17, 0x2f, 0x88, 0x8e, 0xcf, 0x2f, 0x4b, 0x2d, 0x2a, 0xca, 0x4c, 0x49, 0x95, 0x60,
	0x06, 0x4b, 0xf2, 0x80, 0x04, 0xfd, 0xa1, 0x62, 0x4a, 0x6e, 0x5c, 0x1c, 0xc1, 0x50, 0xcb, 0x84,
	0xac, 0xb8, 0xd8, 0x8a, 0x41, 0x96, 0x15, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0x29, 0xe9,
	0xe1, 0x71, 0x9a, 0x1e, 0xd8, 0x5d, 0x41, 0x50, 0x1d, 0x4e, 0x16, 0x51, 0x66, 0xe9, 0x99, 0x25,
	0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x70, 0x4d, 0xfa, 0x45, 0xf9, 0x25, 0x89, 0x25,
	0x99, 0xf9, 0x79, 0xba, 0x30, 0x7d, 0x45, 0xfa, 0x60, 0x73, 0xf4, 0x61, 0xfc, 0x24, 0x36, 0x30,
	0xdf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x6f, 0xde, 0x2f, 0x18, 0x01, 0x00, 0x00,
}
